//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gaming.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GamingContext : DbContext
    {
        public GamingContext()
            : base("name=GamingContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Boss> Bosses { get; set; }
        public virtual DbSet<Equipment> Equipments { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Guild> Guilds { get; set; }
        public virtual DbSet<Hero> Heroes { get; set; }
        public virtual DbSet<NPC> NPCs { get; set; }
        public virtual DbSet<Place> Places { get; set; }
        public virtual DbSet<Quest> Quests { get; set; }
        public virtual DbSet<Raid> Raids { get; set; }
    
        [DbFunction("GamingContext", "raidsOnTheGo")]
        public virtual IQueryable<raidsOnTheGo_Result> raidsOnTheGo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<raidsOnTheGo_Result>("[GamingContext].[raidsOnTheGo]()");
        }
    
        public virtual int levelUpGuildMembers(string guildId, Nullable<decimal> amountOfLevels)
        {
            var guildIdParameter = guildId != null ?
                new ObjectParameter("guildId", guildId) :
                new ObjectParameter("guildId", typeof(string));
    
            var amountOfLevelsParameter = amountOfLevels.HasValue ?
                new ObjectParameter("amountOfLevels", amountOfLevels) :
                new ObjectParameter("amountOfLevels", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("levelUpGuildMembers", guildIdParameter, amountOfLevelsParameter);
        }
    }
}
